// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module single_line_48dist_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i_coefs_mantRe_address0,
        i_coefs_mantRe_ce0,
        i_coefs_mantRe_q0,
        i_coefs_mantRe_address1,
        i_coefs_mantRe_ce1,
        i_coefs_mantRe_q1,
        i_coefs_mantIm_address0,
        i_coefs_mantIm_ce0,
        i_coefs_mantIm_q0,
        i_coefs_mantIm_address1,
        i_coefs_mantIm_ce1,
        i_coefs_mantIm_q1,
        i_coefs_exp_address0,
        i_coefs_exp_ce0,
        i_coefs_exp_q0,
        i_coefs_exp_address1,
        i_coefs_exp_ce1,
        i_coefs_exp_q1,
        i_tonesDis_address0,
        i_tonesDis_ce0,
        i_tonesDis_q0,
        i_tonesDis_address1,
        i_tonesDis_ce1,
        i_tonesDis_q1
);

parameter    ap_ST_fsm_state1 = 6'b1;
parameter    ap_ST_fsm_state2 = 6'b10;
parameter    ap_ST_fsm_state3 = 6'b100;
parameter    ap_ST_fsm_state4 = 6'b1000;
parameter    ap_ST_fsm_state5 = 6'b10000;
parameter    ap_ST_fsm_state6 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1B = 32'b11011;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] i_coefs_mantRe_address0;
output   i_coefs_mantRe_ce0;
input  [31:0] i_coefs_mantRe_q0;
output  [2:0] i_coefs_mantRe_address1;
output   i_coefs_mantRe_ce1;
input  [31:0] i_coefs_mantRe_q1;
output  [2:0] i_coefs_mantIm_address0;
output   i_coefs_mantIm_ce0;
input  [31:0] i_coefs_mantIm_q0;
output  [2:0] i_coefs_mantIm_address1;
output   i_coefs_mantIm_ce1;
input  [31:0] i_coefs_mantIm_q1;
output  [2:0] i_coefs_exp_address0;
output   i_coefs_exp_ce0;
input  [15:0] i_coefs_exp_q0;
output  [2:0] i_coefs_exp_address1;
output   i_coefs_exp_ce1;
input  [15:0] i_coefs_exp_q1;
output  [2:0] i_tonesDis_address0;
output   i_tonesDis_ce0;
input  [63:0] i_tonesDis_q0;
output  [2:0] i_tonesDis_address1;
output   i_tonesDis_ce1;
input  [63:0] i_tonesDis_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] i_coefs_mantRe_address0;
reg i_coefs_mantRe_ce0;
reg[2:0] i_coefs_mantRe_address1;
reg i_coefs_mantRe_ce1;
reg[2:0] i_coefs_mantIm_address0;
reg i_coefs_mantIm_ce0;
reg[2:0] i_coefs_mantIm_address1;
reg i_coefs_mantIm_ce1;
reg[2:0] i_coefs_exp_address0;
reg i_coefs_exp_ce0;
reg[2:0] i_coefs_exp_address1;
reg i_coefs_exp_ce1;
reg[2:0] i_tonesDis_address0;
reg i_tonesDis_ce0;
reg[2:0] i_tonesDis_address1;
reg i_tonesDis_ce1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [11:0] reg_336;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] ap_CS_fsm_state4;
wire    grp_complex_mult_fu_276_ap_done;
wire    grp_complex_mult_fu_286_ap_done;
reg   [11:0] reg_341;
reg   [11:0] reg_346;
reg   [11:0] reg_351;
wire   [9:0] tmp_fu_356_p1;
reg   [9:0] tmp_reg_512;
wire   [9:0] tmp_1_fu_360_p1;
reg   [9:0] tmp_1_reg_517;
wire   [3:0] coef1_exp_m_v_0_fu_364_p1;
reg   [3:0] coef1_exp_m_v_0_reg_522;
wire   [9:0] tmp_3_fu_368_p1;
reg   [9:0] tmp_3_reg_527;
wire   [9:0] tmp_4_fu_372_p1;
reg   [9:0] tmp_4_reg_532;
wire   [3:0] coef2_exp_m_v_0_fu_376_p1;
reg   [3:0] coef2_exp_m_v_0_reg_537;
wire   [3:0] tone1_exp_m_v_0_fu_380_p1;
reg   [3:0] tone1_exp_m_v_0_reg_542;
wire   [3:0] tone2_exp_m_v_0_fu_384_p1;
reg   [3:0] tone2_exp_m_v_0_reg_547;
wire   [9:0] tmp_6_fu_388_p1;
reg   [9:0] tmp_6_reg_572;
wire   [0:0] ap_CS_fsm_state3;
wire   [9:0] tmp_7_fu_392_p1;
reg   [9:0] tmp_7_reg_577;
wire   [3:0] coef3_exp_m_v_0_fu_396_p1;
reg   [3:0] coef3_exp_m_v_0_reg_582;
wire   [3:0] tone3_exp_m_v_0_fu_400_p1;
reg   [3:0] tone3_exp_m_v_0_reg_587;
reg   [11:0] tmp_i_i5_i_reg_592;
reg   [11:0] tmp_i6_i2_i_reg_597;
wire   [9:0] tmp_12_fu_404_p1;
reg   [9:0] tmp_12_reg_642;
wire   [9:0] tmp_13_fu_408_p1;
reg   [9:0] tmp_13_reg_647;
wire   [3:0] coef1_exp_m_v_0_1_fu_412_p1;
reg   [3:0] coef1_exp_m_v_0_1_reg_652;
wire   [3:0] tone1_exp_m_v_0_1_fu_416_p1;
reg   [3:0] tone1_exp_m_v_0_1_reg_657;
reg   [11:0] tmp_i_i3_i1_reg_662;
reg   [11:0] tmp_i6_i_i1_reg_667;
wire   [9:0] tmp_15_fu_420_p1;
reg   [9:0] tmp_15_reg_672;
wire   [9:0] tmp_16_fu_424_p1;
reg   [9:0] tmp_16_reg_677;
wire   [3:0] coef2_exp_m_v_0_1_fu_428_p1;
reg   [3:0] coef2_exp_m_v_0_1_reg_682;
wire   [9:0] tmp_18_fu_432_p1;
reg   [9:0] tmp_18_reg_687;
wire   [9:0] tmp_19_fu_436_p1;
reg   [9:0] tmp_19_reg_692;
wire   [3:0] coef3_exp_m_v_0_1_fu_440_p1;
reg   [3:0] coef3_exp_m_v_0_1_reg_697;
wire   [3:0] tone2_exp_m_v_0_1_fu_444_p1;
reg   [3:0] tone2_exp_m_v_0_1_reg_702;
wire   [3:0] tone3_exp_m_v_0_1_fu_448_p1;
reg   [3:0] tone3_exp_m_v_0_1_reg_707;
wire    grp_complex_mult_fu_276_ap_start;
wire    grp_complex_mult_fu_276_ap_idle;
wire    grp_complex_mult_fu_276_ap_ready;
reg   [9:0] grp_complex_mult_fu_276_p_read;
reg   [9:0] grp_complex_mult_fu_276_p_read1;
reg   [3:0] grp_complex_mult_fu_276_p_read2;
reg   [11:0] grp_complex_mult_fu_276_p_read3;
reg   [11:0] grp_complex_mult_fu_276_p_read4;
reg   [3:0] grp_complex_mult_fu_276_p_read5;
wire    grp_complex_mult_fu_286_ap_start;
wire    grp_complex_mult_fu_286_ap_idle;
wire    grp_complex_mult_fu_286_ap_ready;
reg   [9:0] grp_complex_mult_fu_286_p_read;
reg   [9:0] grp_complex_mult_fu_286_p_read1;
reg   [3:0] grp_complex_mult_fu_286_p_read2;
reg   [11:0] grp_complex_mult_fu_286_p_read3;
reg   [11:0] grp_complex_mult_fu_286_p_read4;
reg   [3:0] grp_complex_mult_fu_286_p_read5;
reg    ap_reg_grp_complex_mult_fu_276_ap_start;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] ap_CS_fsm_state6;
reg    ap_reg_grp_complex_mult_fu_286_ap_start;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
#0 ap_reg_grp_complex_mult_fu_276_ap_start = 1'b0;
#0 ap_reg_grp_complex_mult_fu_286_ap_start = 1'b0;
end

complex_mult grp_complex_mult_fu_276(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_complex_mult_fu_276_ap_start),
    .ap_done(grp_complex_mult_fu_276_ap_done),
    .ap_idle(grp_complex_mult_fu_276_ap_idle),
    .ap_ready(grp_complex_mult_fu_276_ap_ready),
    .p_read(grp_complex_mult_fu_276_p_read),
    .p_read1(grp_complex_mult_fu_276_p_read1),
    .p_read2(grp_complex_mult_fu_276_p_read2),
    .p_read3(grp_complex_mult_fu_276_p_read3),
    .p_read4(grp_complex_mult_fu_276_p_read4),
    .p_read5(grp_complex_mult_fu_276_p_read5)
);

complex_mult grp_complex_mult_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_complex_mult_fu_286_ap_start),
    .ap_done(grp_complex_mult_fu_286_ap_done),
    .ap_idle(grp_complex_mult_fu_286_ap_idle),
    .ap_ready(grp_complex_mult_fu_286_ap_ready),
    .p_read(grp_complex_mult_fu_286_p_read),
    .p_read1(grp_complex_mult_fu_286_p_read1),
    .p_read2(grp_complex_mult_fu_286_p_read2),
    .p_read3(grp_complex_mult_fu_286_p_read3),
    .p_read4(grp_complex_mult_fu_286_p_read4),
    .p_read5(grp_complex_mult_fu_286_p_read5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_complex_mult_fu_276_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done))) | (1'b1 == ap_CS_fsm_state3) | (~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done)) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_reg_grp_complex_mult_fu_276_ap_start <= 1'b1;
        end else if ((1'b1 == grp_complex_mult_fu_276_ap_ready)) begin
            ap_reg_grp_complex_mult_fu_276_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_complex_mult_fu_286_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done))) | (1'b1 == ap_CS_fsm_state3) | (~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done)) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_reg_grp_complex_mult_fu_286_ap_start <= 1'b1;
        end else if ((1'b1 == grp_complex_mult_fu_286_ap_ready)) begin
            ap_reg_grp_complex_mult_fu_286_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        coef1_exp_m_v_0_1_reg_652 <= coef1_exp_m_v_0_1_fu_412_p1;
        coef3_exp_m_v_0_reg_582 <= coef3_exp_m_v_0_fu_396_p1;
        tmp_12_reg_642 <= tmp_12_fu_404_p1;
        tmp_13_reg_647 <= tmp_13_fu_408_p1;
        tmp_6_reg_572 <= tmp_6_fu_388_p1;
        tmp_7_reg_577 <= tmp_7_fu_392_p1;
        tmp_i6_i2_i_reg_597 <= {{i_tonesDis_q0[ap_const_lv32_1B : ap_const_lv32_10]}};
        tmp_i6_i_i1_reg_667 <= {{i_tonesDis_q1[ap_const_lv32_1B : ap_const_lv32_10]}};
        tmp_i_i3_i1_reg_662 <= {{i_tonesDis_q1[ap_const_lv32_F : ap_const_lv32_4]}};
        tmp_i_i5_i_reg_592 <= {{i_tonesDis_q0[ap_const_lv32_F : ap_const_lv32_4]}};
        tone1_exp_m_v_0_1_reg_657 <= tone1_exp_m_v_0_1_fu_416_p1;
        tone3_exp_m_v_0_reg_587 <= tone3_exp_m_v_0_fu_400_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        coef1_exp_m_v_0_reg_522 <= coef1_exp_m_v_0_fu_364_p1;
        coef2_exp_m_v_0_reg_537 <= coef2_exp_m_v_0_fu_376_p1;
        tmp_1_reg_517 <= tmp_1_fu_360_p1;
        tmp_3_reg_527 <= tmp_3_fu_368_p1;
        tmp_4_reg_532 <= tmp_4_fu_372_p1;
        tmp_reg_512 <= tmp_fu_356_p1;
        tone1_exp_m_v_0_reg_542 <= tone1_exp_m_v_0_fu_380_p1;
        tone2_exp_m_v_0_reg_547 <= tone2_exp_m_v_0_fu_384_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done)))) begin
        coef2_exp_m_v_0_1_reg_682 <= coef2_exp_m_v_0_1_fu_428_p1;
        coef3_exp_m_v_0_1_reg_697 <= coef3_exp_m_v_0_1_fu_440_p1;
        tmp_15_reg_672 <= tmp_15_fu_420_p1;
        tmp_16_reg_677 <= tmp_16_fu_424_p1;
        tmp_18_reg_687 <= tmp_18_fu_432_p1;
        tmp_19_reg_692 <= tmp_19_fu_436_p1;
        tone2_exp_m_v_0_1_reg_702 <= tone2_exp_m_v_0_1_fu_444_p1;
        tone3_exp_m_v_0_1_reg_707 <= tone3_exp_m_v_0_1_fu_448_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done))))) begin
        reg_336 <= {{i_tonesDis_q0[ap_const_lv32_F : ap_const_lv32_4]}};
        reg_341 <= {{i_tonesDis_q0[ap_const_lv32_1B : ap_const_lv32_10]}};
        reg_346 <= {{i_tonesDis_q1[ap_const_lv32_F : ap_const_lv32_4]}};
        reg_351 <= {{i_tonesDis_q1[ap_const_lv32_1B : ap_const_lv32_10]}};
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done)) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_276_p_read = tmp_15_reg_672;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_276_p_read = tmp_6_reg_572;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_276_p_read = tmp_reg_512;
    end else begin
        grp_complex_mult_fu_276_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_276_p_read1 = tmp_16_reg_677;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_276_p_read1 = tmp_7_reg_577;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_276_p_read1 = tmp_1_reg_517;
    end else begin
        grp_complex_mult_fu_276_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_276_p_read2 = coef2_exp_m_v_0_1_reg_682;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_276_p_read2 = coef3_exp_m_v_0_reg_582;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_276_p_read2 = coef1_exp_m_v_0_reg_522;
    end else begin
        grp_complex_mult_fu_276_p_read2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_276_p_read3 = tmp_i6_i2_i_reg_597;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_complex_mult_fu_276_p_read3 = reg_341;
    end else begin
        grp_complex_mult_fu_276_p_read3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_276_p_read4 = tmp_i_i5_i_reg_592;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_complex_mult_fu_276_p_read4 = reg_336;
    end else begin
        grp_complex_mult_fu_276_p_read4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_276_p_read5 = tone2_exp_m_v_0_1_reg_702;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_276_p_read5 = tone3_exp_m_v_0_reg_587;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_276_p_read5 = tone1_exp_m_v_0_reg_542;
    end else begin
        grp_complex_mult_fu_276_p_read5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_286_p_read = tmp_18_reg_687;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_286_p_read = tmp_12_reg_642;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_286_p_read = tmp_3_reg_527;
    end else begin
        grp_complex_mult_fu_286_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_286_p_read1 = tmp_19_reg_692;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_286_p_read1 = tmp_13_reg_647;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_286_p_read1 = tmp_4_reg_532;
    end else begin
        grp_complex_mult_fu_286_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_286_p_read2 = coef3_exp_m_v_0_1_reg_697;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_286_p_read2 = coef1_exp_m_v_0_1_reg_652;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_286_p_read2 = coef2_exp_m_v_0_reg_537;
    end else begin
        grp_complex_mult_fu_286_p_read2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_286_p_read3 = tmp_i6_i_i1_reg_667;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_complex_mult_fu_286_p_read3 = reg_351;
    end else begin
        grp_complex_mult_fu_286_p_read3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_286_p_read4 = tmp_i_i3_i1_reg_662;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_complex_mult_fu_286_p_read4 = reg_346;
    end else begin
        grp_complex_mult_fu_286_p_read4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_complex_mult_fu_286_p_read5 = tone3_exp_m_v_0_1_reg_707;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_complex_mult_fu_286_p_read5 = tone1_exp_m_v_0_1_reg_657;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_complex_mult_fu_286_p_read5 = tone2_exp_m_v_0_reg_547;
    end else begin
        grp_complex_mult_fu_286_p_read5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_coefs_exp_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_coefs_exp_address0 = ap_const_lv64_2;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_coefs_exp_address0 = ap_const_lv64_0;
    end else begin
        i_coefs_exp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_coefs_exp_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_coefs_exp_address1 = ap_const_lv64_3;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_coefs_exp_address1 = ap_const_lv64_1;
    end else begin
        i_coefs_exp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_coefs_exp_ce0 = 1'b1;
    end else begin
        i_coefs_exp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_coefs_exp_ce1 = 1'b1;
    end else begin
        i_coefs_exp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_coefs_mantIm_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_coefs_mantIm_address0 = ap_const_lv64_2;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_coefs_mantIm_address0 = ap_const_lv64_0;
    end else begin
        i_coefs_mantIm_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_coefs_mantIm_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_coefs_mantIm_address1 = ap_const_lv64_3;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_coefs_mantIm_address1 = ap_const_lv64_1;
    end else begin
        i_coefs_mantIm_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_coefs_mantIm_ce0 = 1'b1;
    end else begin
        i_coefs_mantIm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_coefs_mantIm_ce1 = 1'b1;
    end else begin
        i_coefs_mantIm_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_coefs_mantRe_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_coefs_mantRe_address0 = ap_const_lv64_2;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_coefs_mantRe_address0 = ap_const_lv64_0;
    end else begin
        i_coefs_mantRe_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_coefs_mantRe_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_coefs_mantRe_address1 = ap_const_lv64_3;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_coefs_mantRe_address1 = ap_const_lv64_1;
    end else begin
        i_coefs_mantRe_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_coefs_mantRe_ce0 = 1'b1;
    end else begin
        i_coefs_mantRe_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_coefs_mantRe_ce1 = 1'b1;
    end else begin
        i_coefs_mantRe_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_tonesDis_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_tonesDis_address0 = ap_const_lv64_2;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_tonesDis_address0 = ap_const_lv64_0;
    end else begin
        i_tonesDis_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_tonesDis_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_tonesDis_address1 = ap_const_lv64_3;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        i_tonesDis_address1 = ap_const_lv64_1;
    end else begin
        i_tonesDis_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_tonesDis_ce0 = 1'b1;
    end else begin
        i_tonesDis_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state3))) begin
        i_tonesDis_ce1 = 1'b1;
    end else begin
        i_tonesDis_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (~((1'b0 == grp_complex_mult_fu_276_ap_done) | (1'b0 == grp_complex_mult_fu_286_ap_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign coef1_exp_m_v_0_1_fu_412_p1 = i_coefs_exp_q1[3:0];

assign coef1_exp_m_v_0_fu_364_p1 = i_coefs_exp_q0[3:0];

assign coef2_exp_m_v_0_1_fu_428_p1 = i_coefs_exp_q0[3:0];

assign coef2_exp_m_v_0_fu_376_p1 = i_coefs_exp_q1[3:0];

assign coef3_exp_m_v_0_1_fu_440_p1 = i_coefs_exp_q1[3:0];

assign coef3_exp_m_v_0_fu_396_p1 = i_coefs_exp_q0[3:0];

assign grp_complex_mult_fu_276_ap_start = ap_reg_grp_complex_mult_fu_276_ap_start;

assign grp_complex_mult_fu_286_ap_start = ap_reg_grp_complex_mult_fu_286_ap_start;

assign tmp_12_fu_404_p1 = i_coefs_mantRe_q1[9:0];

assign tmp_13_fu_408_p1 = i_coefs_mantIm_q1[9:0];

assign tmp_15_fu_420_p1 = i_coefs_mantRe_q0[9:0];

assign tmp_16_fu_424_p1 = i_coefs_mantIm_q0[9:0];

assign tmp_18_fu_432_p1 = i_coefs_mantRe_q1[9:0];

assign tmp_19_fu_436_p1 = i_coefs_mantIm_q1[9:0];

assign tmp_1_fu_360_p1 = i_coefs_mantIm_q0[9:0];

assign tmp_3_fu_368_p1 = i_coefs_mantRe_q1[9:0];

assign tmp_4_fu_372_p1 = i_coefs_mantIm_q1[9:0];

assign tmp_6_fu_388_p1 = i_coefs_mantRe_q0[9:0];

assign tmp_7_fu_392_p1 = i_coefs_mantIm_q0[9:0];

assign tmp_fu_356_p1 = i_coefs_mantRe_q0[9:0];

assign tone1_exp_m_v_0_1_fu_416_p1 = i_tonesDis_q1[3:0];

assign tone1_exp_m_v_0_fu_380_p1 = i_tonesDis_q0[3:0];

assign tone2_exp_m_v_0_1_fu_444_p1 = i_tonesDis_q0[3:0];

assign tone2_exp_m_v_0_fu_384_p1 = i_tonesDis_q1[3:0];

assign tone3_exp_m_v_0_1_fu_448_p1 = i_tonesDis_q1[3:0];

assign tone3_exp_m_v_0_fu_400_p1 = i_tonesDis_q0[3:0];

endmodule //single_line_48dist_1
